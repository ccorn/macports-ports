--- runmath.in.orig	2018-04-08 04:56:45.000000000 +0200
+++ runmath.in	2018-12-19 15:13:45.000000000 +0100
@@ -10,6 +10,8 @@ realarray* => realArray()
 pairarray* => pairArray()
 
+#define __STDC_CONSTANT_MACROS 1
 #include <inttypes.h>
+#include <stdint.h>
 
 #include "mathop.h"
 #include "path.h"
@@ -134,10 +136,10 @@ unsigned long long bitreverse64(unsigned
 // Addison Wesley - Pearson Education, Inc. pp. 81-96. 
 Int popcount(Int a)
 {
-  const uint64_t m1  = 0x5555555555555555; //binary: 0101...
-  const uint64_t m2  = 0x3333333333333333; //binary: 00110011..
-  const uint64_t m4  = 0x0f0f0f0f0f0f0f0f; //binary:  4 zeros,  4 ones ...
-  const uint64_t h01 = 0x0101010101010101; //the sum of 256 to the power of 0,1,2,3...
+  const uint64_t m1  = UINT64_C(0x5555555555555555); //binary: 0101...
+  const uint64_t m2  = UINT64_C(0x3333333333333333); //binary: 00110011..
+  const uint64_t m4  = UINT64_C(0x0f0f0f0f0f0f0f0f); //binary:  4 zeros,  4 ones ...
+  const uint64_t h01 = UINT64_C(0x0101010101010101); //the sum of 256 to the power of 0,1,2,3...
 
 // This algorithm uses 12 arithmetic operations, one of which is a multiply.
   a -= (a >> 1) & m1;         //put count of each 2 bits into those 2 bits
