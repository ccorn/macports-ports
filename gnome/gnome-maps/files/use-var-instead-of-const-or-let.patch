From c6e6b3503d59524e9a48c323a02808ca186230f3 Mon Sep 17 00:00:00 2001
From: Marcus Lundblad <ml@update.uu.se>
Date: Mon, 11 Sep 2017 23:05:28 +0200
Subject: Use var instead of const/let for exported symbols

https://bugzilla.gnome.org/show_bug.cgi?id=785569
---
 src/accountListBox.js              |   4 +-
 src/application.js                 |  28 ++--
 src/busyMarker.js                  |   2 +-
 src/checkIn.js                     |   4 +-
 src/checkInDialog.js               |   4 +-
 src/contactPlace.js                |   2 +-
 src/contextMenu.js                 |   2 +-
 src/exportViewDialog.js            |   4 +-
 src/facebookBackend.js             |   2 +-
 src/favoritesPopover.js            |   2 +-
 src/foursquareBackend.js           |   2 +-
 src/foursquareGoaAuthorizer.js     |   2 +-
 src/geoJSONShapeLayer.js           |   2 +-
 src/geoJSONSource.js               |   2 +-
 src/geoJSONStyle.js                |   2 +-
 src/geoclue.js                     |   4 +-
 src/geocodeService.js              |   2 +-
 src/gpxShapeLayer.js               |   2 +-
 src/graphHopper.js                 |   2 +-
 src/http.js                        |   2 +-
 src/hvt.js                         | 278 ++++++++++++++++++-------------------
 src/instructionRow.js              |   2 +-
 src/kmlShapeLayer.js               |   2 +-
 src/layersPopover.js               |   4 +-
 src/location.js                    |   2 +-
 src/locationServiceNotification.js |   2 +-
 src/longPrintLayout.js             |   2 +-
 src/mainWindow.js                  |   4 +-
 src/mapBubble.js                   |   4 +-
 src/mapMarker.js                   |   2 +-
 src/mapSource.js                   |   2 +-
 src/mapView.js                     |  12 +-
 src/mapWalker.js                   |   2 +-
 src/notification.js                |   4 +-
 src/notificationManager.js         |   2 +-
 src/openTripPlanner.js             |   2 +-
 src/osmAccountDialog.js            |   4 +-
 src/osmConnection.js               |   2 +-
 src/osmEdit.js                     |   4 +-
 src/osmEditDialog.js               |   8 +-
 src/osmTypeListRow.js              |   2 +-
 src/osmTypePopover.js              |   2 +-
 src/osmTypeSearchEntry.js          |   2 +-
 src/osmTypes.js                    |   4 +-
 src/overpass.js                    |   2 +-
 src/place.js                       |   2 +-
 src/placeBubble.js                 |   2 +-
 src/placeEntry.js                  |   2 +-
 src/placeFormatter.js              |   2 +-
 src/placeListRow.js                |   4 +-
 src/placeMarker.js                 |   2 +-
 src/placePopover.js                |   2 +-
 src/placeStore.js                  |   6 +-
 src/printLayout.js                 |   2 +-
 src/printOperation.js              |   2 +-
 src/route.js                       |   6 +-
 src/routeEntry.js                  |   4 +-
 src/routeQuery.js                  |   6 +-
 src/routingDelegator.js            |   2 +-
 src/searchPopover.js               |   2 +-
 src/sendToDialog.js                |   4 +-
 src/serviceBackend.js              |   2 +-
 src/settings.js                    |   2 +-
 src/shapeLayer.js                  |   4 +-
 src/shortPrintLayout.js            |   2 +-
 src/sidebar.js                     |   2 +-
 src/socialPlace.js                 |   2 +-
 src/socialPlaceListBox.js          |   6 +-
 src/storedRoute.js                 |   2 +-
 src/transitArrivalMarker.js        |   2 +-
 src/transitArrivalRow.js           |   2 +-
 src/transitBoardMarker.js          |   2 +-
 src/transitItineraryRow.js         |   2 +-
 src/transitLegRow.js               |   2 +-
 src/transitMoreRow.js              |   2 +-
 src/transitOptions.js              |   2 +-
 src/transitOptionsPanel.js         |   2 +-
 src/transitPlan.js                 |  10 +-
 src/transitPrintLayout.js          |   2 +-
 src/transitRouteLabel.js           |   2 +-
 src/transitStopRow.js              |   2 +-
 src/transitWalkMarker.js           |   2 +-
 src/turnPointMarker.js             |   2 +-
 src/userLocationBubble.js          |   2 +-
 src/userLocationMarker.js          |   4 +-
 src/utils.js                       |   4 +-
 src/zoomControl.js                 |   2 +-
 src/zoomInNotification.js          |   2 +-
 88 files changed, 277 insertions(+), 277 deletions(-)

diff --git a/src/accountListBox.js b/src/accountListBox.js
index ab45c2d..df5eb4c 100644
--- src/accountListBox.js
+++ src/accountListBox.js
@@ -26,7 +26,7 @@ const Lang = imports.lang;
 
 const Application = imports.application;
 
-const AccountRow = new Lang.Class({
+var AccountRow = new Lang.Class({
     Name: 'AccountRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/account-row.ui',
@@ -50,7 +50,7 @@ const AccountRow = new Lang.Class({
     }
 });
 
-const AccountListBox = new Lang.Class({
+var AccountListBox = new Lang.Class({
     Name: 'AccountListBox',
     Extends: Gtk.ListBox,
     Signals: {
diff --git a/src/application.js b/src/application.js
index bb9e20f..3bcef84 100644
--- src/application.js
+++ src/application.js
@@ -45,24 +45,24 @@ const Settings = imports.settings;
 const Utils = imports.utils;
 
 // used globally
-let application = null;
-let settings = null;
-let placeStore = null;
-let notificationManager = null;
-let routingDelegator = null;
-let geoclue = null;
-let geocodeService = null;
-let networkMonitor = null;
-let checkInManager = null;
-let contactStore = null;
-let osmEdit = null;
-let normalStartup = true;
-let routeQuery = null;
+var application = null;
+var settings = null;
+var placeStore = null;
+var notificationManager = null;
+var routingDelegator = null;
+var geoclue = null;
+var geocodeService = null;
+var networkMonitor = null;
+var checkInManager = null;
+var contactStore = null;
+var osmEdit = null;
+var normalStartup = true;
+var routeQuery = null;
 
 const _ensuredTypes = [WebKit2.WebView,
                        OSMTypeSearchEntry.OSMTypeSearchEntry];
 
-const Application = new Lang.Class({
+var Application = new Lang.Class({
     Name: 'Application',
     Extends: Gtk.Application,
     Properties: {
diff --git a/src/busyMarker.js b/src/busyMarker.js
index d63b103..b53962d 100644
--- src/busyMarker.js
+++ src/busyMarker.js
@@ -20,7 +20,7 @@
 const Gtk = imports.gi.Gtk;
 const Lang = imports.lang;
 
-const BusyMarker = new Lang.Class({
+var BusyMarker = new Lang.Class({
     Name: 'BusyMarker',
     Extends: Gtk.Frame,
     Template: 'resource:///org/gnome/Maps/ui/busy-marker.ui'
diff --git a/src/checkIn.js b/src/checkIn.js
index 3291822..d6849c5 100644
--- src/checkIn.js
+++ src/checkIn.js
@@ -28,7 +28,7 @@ const CheckInDialog = imports.checkInDialog;
 const FacebookBackend = imports.facebookBackend;
 const FoursquareBackend = imports.foursquareBackend;
 
-const CheckInManager = new Lang.Class({
+var CheckInManager = new Lang.Class({
     Name: 'CheckInManager',
     Extends: GObject.Object,
     Signals: {
@@ -170,7 +170,7 @@ const CheckInManager = new Lang.Class({
     }
 });
 
-const CheckIn = new Lang.Class({
+var CheckIn = new Lang.Class({
     Name: 'CheckIn',
 
     _init: function() {
diff --git a/src/checkInDialog.js b/src/checkInDialog.js
index 61134a4..9b0b700 100644
--- src/checkInDialog.js
+++ src/checkInDialog.js
@@ -30,7 +30,7 @@ const CheckIn = imports.checkIn;
 const SocialPlaceListBox = imports.socialPlaceListBox;
 const SocialPlaceMatcher = imports.socialPlaceMatcher;
 
-const Response = {
+var Response = {
     SUCCESS: 0,
     CANCELLED: 1,
     FAILURE_NO_PLACES: 2,
@@ -39,7 +39,7 @@ const Response = {
     FAILURE_CHECKIN_DISABLED: 5
 };
 
-const CheckInDialog = new Lang.Class({
+var CheckInDialog = new Lang.Class({
     Name: 'CheckInDialog',
     Extends: Gtk.Dialog,
     Template: 'resource:///org/gnome/Maps/ui/check-in-dialog.ui',
diff --git a/src/contactPlace.js b/src/contactPlace.js
index 1a587c9..b2d8876 100644
--- src/contactPlace.js
+++ src/contactPlace.js
@@ -23,7 +23,7 @@ const Lang = imports.lang;
 
 const Place = imports.place;
 
-const ContactPlace = new Lang.Class({
+var ContactPlace = new Lang.Class({
     Name: 'ContactPlace',
     Extends: Place.Place,
 
diff --git a/src/contextMenu.js b/src/contextMenu.js
index e3a24a7..5306093 100644
--- src/contextMenu.js
+++ src/contextMenu.js
@@ -36,7 +36,7 @@ const Place = imports.place;
 const Utils = imports.utils;
 const ZoomInNotification = imports.zoomInNotification;
 
-const ContextMenu = new Lang.Class({
+var ContextMenu = new Lang.Class({
     Name: 'ContextMenu',
     Extends: Gtk.Menu,
     Template: 'resource:///org/gnome/Maps/ui/context-menu.ui',
diff --git a/src/exportViewDialog.js b/src/exportViewDialog.js
index 56e2406..ad757f3 100644
--- src/exportViewDialog.js
+++ src/exportViewDialog.js
@@ -26,14 +26,14 @@ const Lang = imports.lang;
 
 const Utils = imports.utils;
 
-const Response = {
+var Response = {
     SUCCESS: 0,
     CANCEL: 1
 };
 
 const _PREVIEW_WIDTH = 150;
 
-const ExportViewDialog = new Lang.Class({
+var ExportViewDialog = new Lang.Class({
     Name: 'ExportViewDialog',
     Extends: Gtk.Dialog,
     Template: 'resource:///org/gnome/Maps/ui/export-view-dialog.ui',
diff --git a/src/facebookBackend.js b/src/facebookBackend.js
index 785c78c..b1192e9 100644
--- src/facebookBackend.js
+++ src/facebookBackend.js
@@ -27,7 +27,7 @@ const SocialPlace = imports.socialPlace;
 
 const _PLACE_LINK_FORMAT = 'https://www.facebook.com/%s';
 
-const FacebookBackend = new Lang.Class({
+var FacebookBackend = new Lang.Class({
     Name: 'SocialServiceFacebookBackend',
     Extends: ServiceBackend.ServiceBackend,
 
diff --git a/src/favoritesPopover.js b/src/favoritesPopover.js
index 56f2649..b6df29a 100644
--- src/favoritesPopover.js
+++ src/favoritesPopover.js
@@ -28,7 +28,7 @@ const PlaceStore = imports.placeStore;
 
 const _N_VISIBLE = 6;
 
-const FavoritesPopover = new Lang.Class({
+var FavoritesPopover = new Lang.Class({
     Name: 'FavoritesPopover',
     Extends: Gtk.Popover,
     Template: 'resource:///org/gnome/Maps/ui/favorites-popover.ui',
diff --git a/src/foursquareBackend.js b/src/foursquareBackend.js
index 0a69c80..014c9da 100644
--- src/foursquareBackend.js
+++ src/foursquareBackend.js
@@ -27,7 +27,7 @@ const SocialPlace = imports.socialPlace;
 
 const _PLACE_LINK_FORMAT = 'https://foursquare.com/v/foursquare-hq/%s';
 
-const FoursquareBackend = new Lang.Class({
+var FoursquareBackend = new Lang.Class({
     Name: 'SocialServiceFoursquareBackend',
     Extends: ServiceBackend.ServiceBackend,
 
diff --git a/src/foursquareGoaAuthorizer.js b/src/foursquareGoaAuthorizer.js
index ee31214..ba7538e 100644
--- src/foursquareGoaAuthorizer.js
+++ src/foursquareGoaAuthorizer.js
@@ -24,7 +24,7 @@ const Lang = imports.lang;
 
 const _FOURSQUARE_API_VERSION = '20140226';
 
-const FoursquareGoaAuthorizer = new Lang.Class({
+var FoursquareGoaAuthorizer = new Lang.Class({
     Name: 'FoursquareGoaAuthorizer',
 
     _init: function(params) {
diff --git a/src/geoJSONShapeLayer.js b/src/geoJSONShapeLayer.js
index c390e31..422f6d3 100644
--- src/geoJSONShapeLayer.js
+++ src/geoJSONShapeLayer.js
@@ -22,7 +22,7 @@ const Lang = imports.lang;
 const GeoJSONSource = imports.geoJSONSource;
 const ShapeLayer = imports.shapeLayer;
 
-const GeoJSONShapeLayer = new Lang.Class({
+var GeoJSONShapeLayer = new Lang.Class({
     Name: 'GeoJSONShapeLayer',
     Extends: ShapeLayer.ShapeLayer,
 
diff --git a/src/geoJSONSource.js b/src/geoJSONSource.js
index f549169..09e66a3 100644
--- src/geoJSONSource.js
+++ src/geoJSONSource.js
@@ -39,7 +39,7 @@ const TileFeature = { POINT: 1,
                       LINESTRING: 2,
                       POLYGON: 3 };
 
-const GeoJSONSource = new Lang.Class({
+var GeoJSONSource = new Lang.Class({
     Name: 'GeoJSONSource',
     Extends: Champlain.TileSource,
 
diff --git a/src/geoJSONStyle.js b/src/geoJSONStyle.js
index 30bd2f5..fce56bb 100644
--- src/geoJSONStyle.js
+++ src/geoJSONStyle.js
@@ -20,7 +20,7 @@
 
 const Lang = imports.lang;
 
-const GeoJSONStyle = new Lang.Class({
+var GeoJSONStyle = new Lang.Class({
     Name: 'GeoJSONStyle',
 
     _init: function(params) {
diff --git a/src/geoclue.js b/src/geoclue.js
index 570f34e..74e962b 100644
--- src/geoclue.js
+++ src/geoclue.js
@@ -30,14 +30,14 @@ const Location = imports.location;
 const Settings = imports.settings;
 const Utils = imports.utils;
 
-const State = {
+var State = {
     INITIAL: 0,
     ON: 1,
     DENIED: 2,
     FAILED: 3
 };
 
-const Geoclue = new Lang.Class({
+var Geoclue = new Lang.Class({
     Name: 'Geoclue',
     Extends: GObject.Object,
     Signals: {
diff --git a/src/geocodeService.js b/src/geocodeService.js
index 83bd64e..38a60c1 100644
--- src/geocodeService.js
+++ src/geocodeService.js
@@ -28,7 +28,7 @@ const Application = imports.application;
 const Place = imports.place;
 const Utils = imports.utils;
 
-const GeocodeService = new Lang.Class({
+var GeocodeService = new Lang.Class({
     Name: 'GeocodeService',
 
     _init: function() { },
diff --git a/src/gpxShapeLayer.js b/src/gpxShapeLayer.js
index 049e953..f3b6e87 100644
--- src/gpxShapeLayer.js
+++ src/gpxShapeLayer.js
@@ -24,7 +24,7 @@ const ShapeLayer = imports.shapeLayer;
 const Togeojson = imports.togeojson.togeojson;
 const Domparser = imports.xmldom.domparser;
 
-const GpxShapeLayer = new Lang.Class({
+var GpxShapeLayer = new Lang.Class({
     Name: 'GpxShapeLayer',
     Extends: ShapeLayer.ShapeLayer,
 
diff --git a/src/graphHopper.js b/src/graphHopper.js
index 56c6cf0..afb049e 100644
--- src/graphHopper.js
+++ src/graphHopper.js
@@ -32,7 +32,7 @@ const Route = imports.route;
 const RouteQuery = imports.routeQuery;
 const Utils = imports.utils;
 
-const GraphHopper = new Lang.Class({
+var GraphHopper = new Lang.Class({
     Name: 'GraphHopper',
 
     get route() {
diff --git a/src/http.js b/src/http.js
index 289e951..2d7a7c4 100644
--- src/http.js
+++ src/http.js
@@ -29,7 +29,7 @@ function encode(data) {
     return Soup.URI.encode(data.toString(), null);
 }
 
-const Query = new Lang.Class({
+var Query = new Lang.Class({
     Name: 'Query',
 
     _init: function(obj) {
diff --git a/src/hvt.js b/src/hvt.js
index f6d23cf..810b1ad 100644
--- src/hvt.js
+++ src/hvt.js
@@ -30,179 +30,179 @@
  */
 
 // rail services
-const RAILWAY_SERVICE = 100;
-const HIGH_SPEED_RAIL_SERVICE = 101;
-const LONG_DISTANCE_TRAINS = 102;
-const INTER_REGIONAL_RAIL_SERVICE = 103;
-const CAR_TRANSPORT_RAIL_SERVICE = 104;
-const SLEEPER_RAIL_SERVICE = 105;
-const REGIONAL_RAIL_SERVICE = 106;
-const TOURIST_RAILWAY_SERVICE = 107;
-const RAIL_SHUTTLE = 108;
-const SUBURBAN_RAILWAY = 109;
-const REPLACEMENT_RAIL_SERVICE = 110;
-const SPECIAL_RAIL_SERVICE = 111;
-const LORRY_TRANSPORT_RAIL_SERVICE = 112;
-const ALL_RAIL_SERVICES = 113;
-const CROSS_COUNTRY_RAIL_SERVICE = 114;
-const VEHICLE_TRANSPORT_RAIL_SERVICE = 115;
-const RACK_AND_PINION_RAILWAY = 116;
-const ADDITIONAL_RAIL_SERVICE = 117;
-const LAST_RAIL_SERVICE = ADDITIONAL_RAIL_SERVICE;
+var RAILWAY_SERVICE = 100;
+var HIGH_SPEED_RAIL_SERVICE = 101;
+var LONG_DISTANCE_TRAINS = 102;
+var INTER_REGIONAL_RAIL_SERVICE = 103;
+var CAR_TRANSPORT_RAIL_SERVICE = 104;
+var SLEEPER_RAIL_SERVICE = 105;
+var REGIONAL_RAIL_SERVICE = 106;
+var TOURIST_RAILWAY_SERVICE = 107;
+var RAIL_SHUTTLE = 108;
+var SUBURBAN_RAILWAY = 109;
+var REPLACEMENT_RAIL_SERVICE = 110;
+var SPECIAL_RAIL_SERVICE = 111;
+var LORRY_TRANSPORT_RAIL_SERVICE = 112;
+var ALL_RAIL_SERVICES = 113;
+var CROSS_COUNTRY_RAIL_SERVICE = 114;
+var VEHICLE_TRANSPORT_RAIL_SERVICE = 115;
+var RACK_AND_PINION_RAILWAY = 116;
+var ADDITIONAL_RAIL_SERVICE = 117;
+var LAST_RAIL_SERVICE = ADDITIONAL_RAIL_SERVICE;
 
 // coach services
-const COACH_SERVICE = 200;
-const INTERNATIONAL_COACH_SERVICE = 201;
-const NATIONAL_COACH_SERVICE = 202;
-const SHUTTLE_COACH_SERVICE = 203;
-const REGIONAL_COACH_SERVICE = 204;
-const SPECIAL_COACH_SERVICE = 205;
-const SIGHTSEEING_COACH_SERVICE = 206;
-const TOURIST_COACH_SERVICE = 207;
-const COMMUTER_COACH_SERVICE = 208;
-const ALL_COACH_SERVICES = 209;
-const LAST_COACH_SERVICE = ALL_COACH_SERVICES;
+var COACH_SERVICE = 200;
+var INTERNATIONAL_COACH_SERVICE = 201;
+var NATIONAL_COACH_SERVICE = 202;
+var SHUTTLE_COACH_SERVICE = 203;
+var REGIONAL_COACH_SERVICE = 204;
+var SPECIAL_COACH_SERVICE = 205;
+var SIGHTSEEING_COACH_SERVICE = 206;
+var TOURIST_COACH_SERVICE = 207;
+var COMMUTER_COACH_SERVICE = 208;
+var ALL_COACH_SERVICES = 209;
+var LAST_COACH_SERVICE = ALL_COACH_SERVICES;
 
 /// suburban railway services
-const SUBURBAN_RAILWAY_SERVICE = 300;
+var SUBURBAN_RAILWAY_SERVICE = 300;
 
 // urban railway services
-const URBAN_RAILWAY_SERVICE = 400;
-const URBAN_METRO_SERVICE = 401;
-const URBAN_UNDERGROUND_SERVICE = 402;
+var URBAN_RAILWAY_SERVICE = 400;
+var URBAN_METRO_SERVICE = 401;
+var URBAN_UNDERGROUND_SERVICE = 402;
 // this constant has the same name as 400 in the specification
-const URBAN_RAILWAY_SERVICE_2 = 403;
-const ALL_URBAN_RAILWAY_SERVICES = 404;
-const MONORAIL = 405;
-const LAST_URBAN_RAILWAY_SERVICE = MONORAIL;
+var URBAN_RAILWAY_SERVICE_2 = 403;
+var ALL_URBAN_RAILWAY_SERVICES = 404;
+var MONORAIL = 405;
+var LAST_URBAN_RAILWAY_SERVICE = MONORAIL;
 
 // metro services
-const METRO_SERVICE = 500;
+var METRO_SERVICE = 500;
 
 // underground services
-const UNDERGROUND_SERVICE = 600;
+var UNDERGROUND_SERVICE = 600;
 
 // bus services
-const BUS_SERVICE = 700;
-const REGIONAL_BUS_SERVICE = 701;
-const EXPRESS_BUS_SERVICE = 702;
-const STOPPING_BUS_SERVICE = 703;
-const LOCAL_BUS_SERVICE = 704;
-const NIGHT_BUS_SERVICE = 705;
-const POST_BUS_SERVICE = 706;
-const SPECIAL_NEEDS_BUS_SERVICE = 707;
-const MOBILITY_BUS_SERVICE = 708;
-const MOBILITY_BUS_SERVICE_FOR_REGISTERED_DISABLED = 709;
-const SIGHTSEEING_BUS = 710;
-const SHUTTLE_BUS = 711;
-const SCHOOL_BUS = 712;
-const SCHOOL_AND_PUBLIC_SERVICE_BUS_SERVICE = 713;
-const RAIL_REPLACEMENT_BUS_SERVICE = 714;
-const DEMAND_AND_RESPONSE_BUS_SERVICE = 715;
-const ALL_BUS_SERVICES = 716;
-const LAST_BUS_SERVICE = ALL_BUS_SERVICES;
+var BUS_SERVICE = 700;
+var REGIONAL_BUS_SERVICE = 701;
+var EXPRESS_BUS_SERVICE = 702;
+var STOPPING_BUS_SERVICE = 703;
+var LOCAL_BUS_SERVICE = 704;
+var NIGHT_BUS_SERVICE = 705;
+var POST_BUS_SERVICE = 706;
+var SPECIAL_NEEDS_BUS_SERVICE = 707;
+var MOBILITY_BUS_SERVICE = 708;
+var MOBILITY_BUS_SERVICE_FOR_REGISTERED_DISABLED = 709;
+var SIGHTSEEING_BUS = 710;
+var SHUTTLE_BUS = 711;
+var SCHOOL_BUS = 712;
+var SCHOOL_AND_PUBLIC_SERVICE_BUS_SERVICE = 713;
+var RAIL_REPLACEMENT_BUS_SERVICE = 714;
+var DEMAND_AND_RESPONSE_BUS_SERVICE = 715;
+var ALL_BUS_SERVICES = 716;
+var LAST_BUS_SERVICE = ALL_BUS_SERVICES;
 
 // trolleybus services
-const TROLLEYBUS_SERVICE = 800;
+var TROLLEYBUS_SERVICE = 800;
 
 // tram services
-const TRAM_SERVICE = 900;
-const CITY_TRAM_SERVICE = 901;
-const LOCAL_TRAM_SERVICE = 902;
-const REGIONAL_TRAM_SERVICE = 903;
-const SIGHTSEEING_TRAM_SERVICE = 904;
-const SHUTTLE_TRAM_SERVICE = 905;
-const ALL_TRAM_SERVICES = 906;
-const LAST_TRAM_SERVICE = ALL_TRAM_SERVICES;
+var TRAM_SERVICE = 900;
+var CITY_TRAM_SERVICE = 901;
+var LOCAL_TRAM_SERVICE = 902;
+var REGIONAL_TRAM_SERVICE = 903;
+var SIGHTSEEING_TRAM_SERVICE = 904;
+var SHUTTLE_TRAM_SERVICE = 905;
+var ALL_TRAM_SERVICES = 906;
+var LAST_TRAM_SERVICE = ALL_TRAM_SERVICES;
 
 // water transport services
-const WATER_TRANSPORT_SERVICE = 1000;
-const INTERNATIONAL_CAR_FERRY_SERVICE = 1001;
-const NATIONAL_CAR_FERRY_SERVICE = 1002;
-const REGIONAL_CAR_FERRY_SERVICE = 1003;
-const LOCAL_CAR_FERRY_SERVICE = 1004;
-const INTERNATIONAL_PASSENGER_FERRY_SERVICE = 1005;
-const NATIONAL_PASSENGER_FERRY_SERVICE = 1006;
-const REGIONAL_PASSENGER_FERRY_SERVICE = 1007;
-const LOCAL_PASSENGER_FERRY_SERVICE = 1008;
-const POST_BOAT_SERVICE = 1009;
-const TRAIN_FERRY_SERVICE = 1010;
-const ROAD_LINK_FERRY_SERVICE = 1011;
-const AIRPORT_LINK_FERRY_SERVICE = 1012;
-const CAR_HIGH_SPEED_FERRY_SERVICE = 1013;
-const PASSENGER_HIGH_SPEED_FERRY_SERVICE = 1014;
-const SIGHTSEEING_BOAT_SERVICE = 1015;
-const SCHOOL_BOAT = 1016;
-const CABLE_DRAWN_BOAT_SERVICE = 1017;
-const RIVER_BUS_SERVICE = 1018;
-const SCHEDULED_FERRY_SERVICE = 1019;
-const SHUTTLE_FERRY_SERVICE = 1020;
-const ALL_WATER_TRANSPORT_SERVICE = 1021;
-const LAST_WATER_TRANSPORT_SERVICE = ALL_WATER_TRANSPORT_SERVICE;
+var WATER_TRANSPORT_SERVICE = 1000;
+var INTERNATIONAL_CAR_FERRY_SERVICE = 1001;
+var NATIONAL_CAR_FERRY_SERVICE = 1002;
+var REGIONAL_CAR_FERRY_SERVICE = 1003;
+var LOCAL_CAR_FERRY_SERVICE = 1004;
+var INTERNATIONAL_PASSENGER_FERRY_SERVICE = 1005;
+var NATIONAL_PASSENGER_FERRY_SERVICE = 1006;
+var REGIONAL_PASSENGER_FERRY_SERVICE = 1007;
+var LOCAL_PASSENGER_FERRY_SERVICE = 1008;
+var POST_BOAT_SERVICE = 1009;
+var TRAIN_FERRY_SERVICE = 1010;
+var ROAD_LINK_FERRY_SERVICE = 1011;
+var AIRPORT_LINK_FERRY_SERVICE = 1012;
+var CAR_HIGH_SPEED_FERRY_SERVICE = 1013;
+var PASSENGER_HIGH_SPEED_FERRY_SERVICE = 1014;
+var SIGHTSEEING_BOAT_SERVICE = 1015;
+var SCHOOL_BOAT = 1016;
+var CABLE_DRAWN_BOAT_SERVICE = 1017;
+var RIVER_BUS_SERVICE = 1018;
+var SCHEDULED_FERRY_SERVICE = 1019;
+var SHUTTLE_FERRY_SERVICE = 1020;
+var ALL_WATER_TRANSPORT_SERVICE = 1021;
+var LAST_WATER_TRANSPORT_SERVICE = ALL_WATER_TRANSPORT_SERVICE;
 
 // air service
-const AIR_SERVICE = 1100;
-const INTERNATIONAL_AIR_SERVICE = 1101;
-const DOMESTIC_AIR_SERVICE = 1102;
-const INTERCONTINENTAL_AIR_SERVICE = 1103;
-const DOMESTIC_SCHEDULED_AIR_SERVICE = 1104;
-const SHUTTLE_AIR_SERVICE = 1105;
-const INTERCONTINENTAL_CHARTER_AIR_SERVICE = 1106;
-const INTERNATIONAL_CHARTER_AIR_SERVICE = 1107;
-const ROUND_TRIP_CHARTER_AIR_SERVICE = 1108;
-const SIGHTSEEING_AIR_SERVICE = 1109;
-const HELICOPTER_AIR_SERVICE = 1110;
-const DOMESTIC_CHARTER_AIR_SERVICE = 1111;
-const SCHENGEN_AREA_AIR_SERVICE = 1112;
-const AIRSHIP_SERVICE = 1113;
-const ALL_AIR_SERVICES = 1114;
-const LAST_AIR_SERVICE = ALL_AIR_SERVICES;
+var AIR_SERVICE = 1100;
+var INTERNATIONAL_AIR_SERVICE = 1101;
+var DOMESTIC_AIR_SERVICE = 1102;
+var INTERCONTINENTAL_AIR_SERVICE = 1103;
+var DOMESTIC_SCHEDULED_AIR_SERVICE = 1104;
+var SHUTTLE_AIR_SERVICE = 1105;
+var INTERCONTINENTAL_CHARTER_AIR_SERVICE = 1106;
+var INTERNATIONAL_CHARTER_AIR_SERVICE = 1107;
+var ROUND_TRIP_CHARTER_AIR_SERVICE = 1108;
+var SIGHTSEEING_AIR_SERVICE = 1109;
+var HELICOPTER_AIR_SERVICE = 1110;
+var DOMESTIC_CHARTER_AIR_SERVICE = 1111;
+var SCHENGEN_AREA_AIR_SERVICE = 1112;
+var AIRSHIP_SERVICE = 1113;
+var ALL_AIR_SERVICES = 1114;
+var LAST_AIR_SERVICE = ALL_AIR_SERVICES;
 
 // ferry services
-const FERRY_SERVICE = 1200;
+var FERRY_SERVICE = 1200;
 
 // telecabin services
-const TELECABIN_SERVICE = 1300;
-const TELECABIN_SERVICES = 1301;
+var TELECABIN_SERVICE = 1300;
+var TELECABIN_SERVICES = 1301;
 // renamed this to not be confused with the tram-like street level cable cars
-const TELECABIN_CABLE_CAR_SERVICE = 1302;
-const ELEVATOR_SERVICE = 1303;
-const CHAIR_LIFT_SERVICE = 1304;
-const DRAG_LIFT_SERVICE = 1305;
-const SMALL_TELECABIN_SERVICE = 1306;
-const ALL_TELECABIN_SERVICES = 1307;
-const LAST_TELECABIN_SERVICE = ALL_TELECABIN_SERVICES;
+var TELECABIN_CABLE_CAR_SERVICE = 1302;
+var ELEVATOR_SERVICE = 1303;
+var CHAIR_LIFT_SERVICE = 1304;
+var DRAG_LIFT_SERVICE = 1305;
+var SMALL_TELECABIN_SERVICE = 1306;
+var ALL_TELECABIN_SERVICES = 1307;
+var LAST_TELECABIN_SERVICE = ALL_TELECABIN_SERVICES;
 
 // funicular services
-const FUNICULAR_SERVICE = 1400;
-const FUNICULAR_SERVICE_2 = 1401;
-const ALL_FUNICULAR_SERVICES = 1402;
-const LAST_FUNICULAR_SERVICE = ALL_FUNICULAR_SERVICES;
+var FUNICULAR_SERVICE = 1400;
+var FUNICULAR_SERVICE_2 = 1401;
+var ALL_FUNICULAR_SERVICES = 1402;
+var LAST_FUNICULAR_SERVICE = ALL_FUNICULAR_SERVICES;
 
 // taxi services
-const TAXI_SERVICE = 1500;
-const COMMUNAL_TAXI_SERVICE = 1501;
-const WATER_TAXI_SERVICE = 1502;
-const RAIL_TAXI_SERVICE = 1503;
-const BIKE_TAXI_SERVICE = 1504;
-const LICENSED_TAXI_SERVICE = 1505;
-const PRIVATE_HIRE_SERVICE_VEHICLE = 1506;
-const ALL_TAXI_SERVICES = 1507;
-const LAST_TAXI_SERVICE = ALL_TAXI_SERVICES;
+var TAXI_SERVICE = 1500;
+var COMMUNAL_TAXI_SERVICE = 1501;
+var WATER_TAXI_SERVICE = 1502;
+var RAIL_TAXI_SERVICE = 1503;
+var BIKE_TAXI_SERVICE = 1504;
+var LICENSED_TAXI_SERVICE = 1505;
+var PRIVATE_HIRE_SERVICE_VEHICLE = 1506;
+var ALL_TAXI_SERVICES = 1507;
+var LAST_TAXI_SERVICE = ALL_TAXI_SERVICES;
 
 // self drive
-const SELF_DRIVE = 1600;
-const HIRE_CAR = 1601;
-const HIRE_VAN = 1602;
-const HIRE_MOTORBIKE = 1603;
-const HIRE_CYCLE = 1604;
-const LAST_SELF_DRIVE = HIRE_CYCLE;
+var SELF_DRIVE = 1600;
+var HIRE_CAR = 1601;
+var HIRE_VAN = 1602;
+var HIRE_MOTORBIKE = 1603;
+var HIRE_CYCLE = 1604;
+var LAST_SELF_DRIVE = HIRE_CYCLE;
 
 // misc. service
-const MISCELLANEOUS_SERVICE = 1700;
-const CABLE_CAR = 1701;
-const HORSE_DRAWN_CARRIAGE = 1702;
-const LAST_MISCELLANEOUS_SERVCE = HORSE_DRAWN_CARRIAGE;
+var MISCELLANEOUS_SERVICE = 1700;
+var CABLE_CAR = 1701;
+var HORSE_DRAWN_CARRIAGE = 1702;
+var LAST_MISCELLANEOUS_SERVCE = HORSE_DRAWN_CARRIAGE;
 
 /**
  * returns the super type of a given HVT type code, or -1 if the supplied code
diff --git a/src/instructionRow.js b/src/instructionRow.js
index a004cb9..644e13f 100644
--- src/instructionRow.js
+++ src/instructionRow.js
@@ -24,7 +24,7 @@ const Gtk = imports.gi.Gtk;
 const Lang = imports.lang;
 const Utils = imports.utils;
 
-const InstructionRow = new Lang.Class({
+var InstructionRow = new Lang.Class({
     Name: "InstructionRow",
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/instruction-row.ui',
diff --git a/src/kmlShapeLayer.js b/src/kmlShapeLayer.js
index 7e4e06d..3de9985 100644
--- src/kmlShapeLayer.js
+++ src/kmlShapeLayer.js
@@ -24,7 +24,7 @@ const ShapeLayer = imports.shapeLayer;
 const Togeojson = imports.togeojson.togeojson;
 const Domparser = imports.xmldom.domparser;
 
-const KmlShapeLayer = new Lang.Class({
+var KmlShapeLayer = new Lang.Class({
     Name: 'KmlShapeLayer',
     Extends: ShapeLayer.ShapeLayer,
 
diff --git a/src/layersPopover.js b/src/layersPopover.js
index ee40334..a5c7fa3 100644
--- src/layersPopover.js
+++ src/layersPopover.js
@@ -24,7 +24,7 @@ const MapView = imports.mapView;
 const ShapeLayer = imports.shapeLayer;
 const Utils = imports.utils;
 
-const ShapeLayerRow = new Lang.Class({
+var ShapeLayerRow = new Lang.Class({
     Name: 'ShapeLayerRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/shape-layer-row.ui',
@@ -52,7 +52,7 @@ const ShapeLayerRow = new Lang.Class({
     }
 });
 
-const LayersPopover = new Lang.Class({
+var LayersPopover = new Lang.Class({
     Name: 'LayersPopover',
     Extends: Gtk.Popover,
     Template: 'resource:///org/gnome/Maps/ui/layers-popover.ui',
diff --git a/src/location.js b/src/location.js
index f33f111..d4ec63a 100644
--- src/location.js
+++ src/location.js
@@ -25,7 +25,7 @@ const Geocode = imports.gi.GeocodeGlib;
 const Lang = imports.lang;
 
 /* Adds heading to Geocode.Location */
-const Location = new Lang.Class({
+var Location = new Lang.Class({
     Name: 'Location',
     Extends: Geocode.Location,
 
diff --git a/src/locationServiceNotification.js b/src/locationServiceNotification.js
index 04c7040..acb8cf4 100644
--- src/locationServiceNotification.js
+++ src/locationServiceNotification.js
@@ -30,7 +30,7 @@ const Utils = imports.utils;
 
 const _PRIVACY_PANEL = 'gnome-privacy-panel.desktop';
 
-const LocationServiceNotification = new Lang.Class({
+var LocationServiceNotification = new Lang.Class({
     Name: 'LocationServiceNotification',
     Extends: Notification.Notification,
 
diff --git a/src/longPrintLayout.js b/src/longPrintLayout.js
index 16b4d1c..8f274e1 100644
--- src/longPrintLayout.js
+++ src/longPrintLayout.js
@@ -37,7 +37,7 @@ const _MiniMapView = {
     ZOOM_LEVEL: 18
 };
 
-const LongPrintLayout = new Lang.Class({
+var LongPrintLayout = new Lang.Class({
     Name: 'LongPrintLayout',
     Extends: PrintLayout.PrintLayout,
 
diff --git a/src/mainWindow.js b/src/mainWindow.js
index 164b0ef..ff76b8d 100644
--- src/mainWindow.js
+++ src/mainWindow.js
@@ -48,7 +48,7 @@ const _CONFIGURE_ID_TIMEOUT = 100; // msecs
 const _WINDOW_MIN_WIDTH = 600;
 const _WINDOW_MIN_HEIGHT = 500;
 
-const ShapeLayerFileChooser = new Lang.Class({
+var ShapeLayerFileChooser = new Lang.Class({
     Name: 'ShapeLayerFileChooser',
     Extends: Gtk.FileChooserNative,
     Template: 'resource:///org/gnome/Maps/ui/shape-layer-file-chooser.ui',
@@ -71,7 +71,7 @@ const ShapeLayerFileChooser = new Lang.Class({
     }
 });
 
-const MainWindow = new Lang.Class({
+var MainWindow = new Lang.Class({
     Name: 'MainWindow',
     Extends: Gtk.ApplicationWindow,
     Template: 'resource:///org/gnome/Maps/ui/main-window.ui',
diff --git a/src/mapBubble.js b/src/mapBubble.js
index ea8cada..f6087fa 100644
--- src/mapBubble.js
+++ src/mapBubble.js
@@ -32,7 +32,7 @@ const PlaceStore = imports.placeStore;
 const SendToDialog = imports.sendToDialog;
 const Utils = imports.utils;
 
-const Button = {
+var Button = {
     NONE: 0,
     ROUTE: 2,
     SEND_TO: 4,
@@ -40,7 +40,7 @@ const Button = {
     CHECK_IN: 16
 };
 
-const MapBubble = new Lang.Class({
+var MapBubble = new Lang.Class({
     Name: "MapBubble",
     Extends: Gtk.Popover,
     Abstract: true,
diff --git a/src/mapMarker.js b/src/mapMarker.js
index 7ad9516..37d48a9 100644
--- src/mapMarker.js
+++ src/mapMarker.js
@@ -31,7 +31,7 @@ const Mainloop = imports.mainloop;
 const MapWalker = imports.mapWalker;
 const Utils = imports.utils;
 
-const MapMarker = new Lang.Class({
+var MapMarker = new Lang.Class({
     Name: 'MapMarker',
     Extends: Champlain.Marker,
     Implements: [Champlain.Exportable],
diff --git a/src/mapSource.js b/src/mapSource.js
index 89c15c9..9f4c97b 100644
--- src/mapSource.js
+++ src/mapSource.js
@@ -38,7 +38,7 @@ const _MEMORY_CACHE_SIZE_LIMIT = 100; /* number of tiles */
 const _LOGO_PADDING_X = 10;
 const _LOGO_PADDING_Y = 25;
 
-const AttributionLogo = new Lang.Class({
+var AttributionLogo = new Lang.Class({
     Name: 'AttributionLogo',
         Extends: GtkClutter.Actor,
 
diff --git a/src/mapView.js b/src/mapView.js
index a1942df..363ae90 100644
--- src/mapView.js
+++ src/mapView.js
@@ -51,7 +51,7 @@ const TurnPointMarker = imports.turnPointMarker;
 const UserLocationMarker = imports.userLocationMarker;
 const Utils = imports.utils;
 
-const MapType = {
+var MapType = {
     LOCAL: 'MapsLocalSource',
     STREET: 'MapsStreetSource',
     AERIAL: 'MapsAerialSource'
@@ -63,10 +63,10 @@ const MapMinZoom = 2;
  * Due to the mathematics of spherical mericator projection,
  * the map must be truncated at a latitude less than 90 degrees.
  */
-const MAX_LATITUDE = 85.05112;
-const MIN_LATITUDE = -85.05112;
-const MAX_LONGITUDE = 180;
-const MIN_LONGITUDE = -180;
+var MAX_LATITUDE = 85.05112;
+var MIN_LATITUDE = -85.05112;
+var MAX_LONGITUDE = 180;
+var MIN_LONGITUDE = -180;
 
 /* threashhold for route color luminance when we consider it more or less
  * as white, and draw an outline on the path */
@@ -86,7 +86,7 @@ const DASHED_ROUTE_LINE_FILLED_LENGTH = 5;
 // length of gaps of dashed lines used for walking legs of transit itineraries
 const DASHED_ROUTE_LINE_GAP_LENGTH = 5;
 
-const MapView = new Lang.Class({
+var MapView = new Lang.Class({
     Name: 'MapView',
     Extends: GtkChamplain.Embed,
     Properties: {
diff --git a/src/mapWalker.js b/src/mapWalker.js
index 410baa7..0944f9d 100644
--- src/mapWalker.js
+++ src/mapWalker.js
@@ -33,7 +33,7 @@ const _MAX_DISTANCE = 19850; // half of Earth's circumference (km)
 const _MIN_ANIMATION_DURATION = 2000; // msec
 const _MAX_ANIMATION_DURATION = 5000; // msec
 
-const MapWalker = new Lang.Class({
+var MapWalker = new Lang.Class({
     Name: 'MapWalker',
 
     _init: function(place, mapView) {
diff --git a/src/notification.js b/src/notification.js
index 3cbe323..3eb64cc 100644
--- src/notification.js
+++ src/notification.js
@@ -25,7 +25,7 @@ const Mainloop = imports.mainloop;
 
 const Utils = imports.utils;
 
-const Notification = new Lang.Class({
+var Notification = new Lang.Class({
     Name: 'Notification',
     Extends: Gtk.Revealer,
     Signals: {
@@ -68,7 +68,7 @@ const Notification = new Lang.Class({
     }
 });
 
-const Plain = new Lang.Class({
+var Plain = new Lang.Class({
     Name: 'Plain',
     Extends: Notification,
 
diff --git a/src/notificationManager.js b/src/notificationManager.js
index caec17f..ed622ac 100644
--- src/notificationManager.js
+++ src/notificationManager.js
@@ -27,7 +27,7 @@ const Notification = imports.notification;
 
 const _TIMEOUT = 5000; /* ms */
 
-const NotificationManager = new Lang.Class({
+var NotificationManager = new Lang.Class({
     Name: 'NotificationManager',
 
     _init: function(overlay) {
diff --git a/src/openTripPlanner.js b/src/openTripPlanner.js
index 6657d63..52f7a8a 100644
--- src/openTripPlanner.js
+++ src/openTripPlanner.js
@@ -122,7 +122,7 @@ const NUM_STOPS_TO_TRY = 5;
 // gap to use when fetching additional routes
 const GAP_BEFORE_MORE_RESULTS = 120;
 
-const OpenTripPlanner = new Lang.Class({
+var OpenTripPlanner = new Lang.Class({
     Name: 'OpenTripPlanner',
 
     _init: function(params) {
diff --git a/src/osmAccountDialog.js b/src/osmAccountDialog.js
index cf92155..c9ce704 100644
--- src/osmAccountDialog.js
+++ src/osmAccountDialog.js
@@ -27,11 +27,11 @@ const WebKit2 = imports.gi.WebKit2;
 
 const Application = imports.application;
 
-const Response = {
+var Response = {
     SIGNED_IN: 0
 };
 
-const OSMAccountDialog = new Lang.Class({
+var OSMAccountDialog = new Lang.Class({
     Name: 'OSMAccountDialog',
     Extends: Gtk.Dialog,
     Template: 'resource:///org/gnome/Maps/ui/osm-account-dialog.ui',
diff --git a/src/osmConnection.js b/src/osmConnection.js
index 8270cb9..630ce42 100644
--- src/osmConnection.js
+++ src/osmConnection.js
@@ -45,7 +45,7 @@ const SECRET_SCHEMA = new Secret.Schema("org.gnome.Maps",
     }
 );
 
-const OSMConnection = new Lang.Class({
+var OSMConnection = new Lang.Class({
     Name: 'OSMConnection',
 
     _init: function(params) {
diff --git a/src/osmEdit.js b/src/osmEdit.js
index 5ee9a20..6ea82e7 100644
--- src/osmEdit.js
+++ src/osmEdit.js
@@ -30,9 +30,9 @@ const OSMConnection = imports.osmConnection;
 const Utils = imports.utils;
 
 /* minimum zoom level at which to offer adding a location */
-const MIN_ADD_LOCATION_ZOOM_LEVEL = 16;
+var MIN_ADD_LOCATION_ZOOM_LEVEL = 16;
 
-const OSMEdit = new Lang.Class({
+var OSMEdit = new Lang.Class({
     Name: 'OSMEdit',
     Extends: GObject.Object,
 
diff --git a/src/osmEditDialog.js b/src/osmEditDialog.js
index ea2ce93..637f675 100644
--- src/osmEditDialog.js
+++ src/osmEditDialog.js
@@ -36,7 +36,7 @@ const OSMTypeSearchEntry = imports.osmTypeSearchEntry;
 const OSMUtils = imports.osmUtils;
 const Utils = imports.utils;
 
-const Response = {
+var Response = {
     UPLOADED: 0,
     DELETED: 1,
     CANCELLED: 2,
@@ -57,7 +57,7 @@ const EditFieldType = {
 
 const _WIKI_BASE = 'https://wiki.openstreetmap.org/wiki/Key:';
 
-let _osmWikipediaRewriteFunc = function(text) {
+var _osmWikipediaRewriteFunc = function(text) {
     let wikipediaArticleFormatted = OSMUtils.getWikipediaOSMArticleFormatFromUrl(text);
 
     /* if the entered text is a Wikipedia link,
@@ -72,7 +72,7 @@ let _osmWikipediaRewriteFunc = function(text) {
  * strip off the leading tel: protocol string and trailing parameters,
  * following a ;
  * otherwise return the string unmodified */
-let _osmPhoneRewriteFunc = function(text) {
+var _osmPhoneRewriteFunc = function(text) {
     if (GLib.uri_parse_scheme(text) === 'tel') {
         let afterTel = text.replace('tel:', '');
 
@@ -258,7 +258,7 @@ const OSMEditAddress = new Lang.Class({
 });
 
 
-const OSMEditDialog = new Lang.Class({
+var OSMEditDialog = new Lang.Class({
     Name: 'OSMEditDialog',
     Extends: Gtk.Dialog,
     Template: 'resource:///org/gnome/Maps/ui/osm-edit-dialog.ui',
diff --git a/src/osmTypeListRow.js b/src/osmTypeListRow.js
index ae5e17c..56229cc 100644
--- src/osmTypeListRow.js
+++ src/osmTypeListRow.js
@@ -22,7 +22,7 @@
 const Gtk = imports.gi.Gtk;
 const Lang = imports.lang;
 
-const OSMTypeListRow = new Lang.Class({
+var OSMTypeListRow = new Lang.Class({
     Name: 'OSMTypeListRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/osm-type-list-row.ui',
diff --git a/src/osmTypePopover.js b/src/osmTypePopover.js
index 8881a02..d53fcf5 100644
--- src/osmTypePopover.js
+++ src/osmTypePopover.js
@@ -26,7 +26,7 @@ const Lang = imports.lang;
 const OSMTypeListRow = imports.osmTypeListRow;
 const SearchPopover = imports.searchPopover;
 
-const OSMTypePopover = new Lang.Class({
+var OSMTypePopover = new Lang.Class({
     Name: 'OSMTypePopover',
     Extends: SearchPopover.SearchPopover,
     InternalChildren: ['list'],
diff --git a/src/osmTypeSearchEntry.js b/src/osmTypeSearchEntry.js
index 2bbebbe..d9b9eeb 100644
--- src/osmTypeSearchEntry.js
+++ src/osmTypeSearchEntry.js
@@ -28,7 +28,7 @@ const Utils = imports.utils;
 
 const MAX_MATCHES = 10;
 
-const OSMTypeSearchEntry = new Lang.Class({
+var OSMTypeSearchEntry = new Lang.Class({
     Name: 'OSMTypeSearchEntry',
     Extends: Gtk.SearchEntry,
     Template: 'resource:///org/gnome/Maps/ui/osm-type-search-entry.ui',
diff --git a/src/osmTypes.js b/src/osmTypes.js
index c96cad7..b3c788a 100644
--- src/osmTypes.js
+++ src/osmTypes.js
@@ -105,7 +105,7 @@ function lookupType(key, value) {
         return null;
 }
 
-const RecentTypesStore = new Lang.Class({
+var RecentTypesStore = new Lang.Class({
     Name: 'RecentTypesStore',
 
     _init: function() {
@@ -165,4 +165,4 @@ const RecentTypesStore = new Lang.Class({
     }
 });
 
-const recentTypesStore = new RecentTypesStore();
+var recentTypesStore = new RecentTypesStore();
diff --git a/src/overpass.js b/src/overpass.js
index 39f4f6e..a872219 100644
--- src/overpass.js
+++ src/overpass.js
@@ -34,7 +34,7 @@ const _DEFAULT_OUTPUT_SORT_ORDER = 'qt';
 
 const BASE_URL = 'https://overpass-api.de/api/interpreter';
 
-const Overpass = new Lang.Class({
+var Overpass = new Lang.Class({
     Name: 'Overpass',
 
     _init: function(params) {
diff --git a/src/place.js b/src/place.js
index 64a7450..5fbf19e 100644
--- src/place.js
+++ src/place.js
@@ -29,7 +29,7 @@ const Utils = imports.utils;
 // Matches coordinates string with the format "<lat>, <long>"
 const COORDINATES_REGEX = /^\s*(\-?\d+(?:\.\d+)?)\s*,\s*(\-?\d+(?:\.\d+)?)\s*$/;
 
-const Place = new Lang.Class({
+var Place = new Lang.Class({
     Name: 'Place',
     Extends: Geocode.Place,
 
diff --git a/src/placeBubble.js b/src/placeBubble.js
index da4e449..1d820f5 100644
--- src/placeBubble.js
+++ src/placeBubble.js
@@ -36,7 +36,7 @@ const PlaceFormatter = imports.placeFormatter;
 const PlaceStore = imports.placeStore;
 const Utils = imports.utils;
 
-const PlaceBubble = new Lang.Class({
+var PlaceBubble = new Lang.Class({
     Name: 'PlaceBubble',
     Extends: MapBubble.MapBubble,
 
diff --git a/src/placeEntry.js b/src/placeEntry.js
index 0cef292..8e0ab13 100644
--- src/placeEntry.js
+++ src/placeEntry.js
@@ -34,7 +34,7 @@ const PlaceStore = imports.placeStore;
 const PlacePopover = imports.placePopover;
 const Utils = imports.utils;
 
-const PlaceEntry = new Lang.Class({
+var PlaceEntry = new Lang.Class({
     Name: 'PlaceEntry',
     Extends: Gtk.SearchEntry,
     Properties: {
diff --git a/src/placeFormatter.js b/src/placeFormatter.js
index 30b08ae..35870b8 100644
--- src/placeFormatter.js
+++ src/placeFormatter.js
@@ -24,7 +24,7 @@ const Lang = imports.lang;
 
 const StoredRoute = imports.storedRoute;
 
-const PlaceFormatter = new Lang.Class({
+var PlaceFormatter = new Lang.Class({
     Name: "PlaceFormatter",
 
     _init: function(place) {
diff --git a/src/placeListRow.js b/src/placeListRow.js
index bba694f..377dca4 100644
--- src/placeListRow.js
+++ src/placeListRow.js
@@ -25,9 +25,9 @@ const PlaceFormatter = imports.placeFormatter;
 const PlaceStore = imports.placeStore;
 const Utils = imports.utils;
 
-const ROW_HEIGHT = 55;
+var ROW_HEIGHT = 55;
 
-const PlaceListRow = new Lang.Class({
+var PlaceListRow = new Lang.Class({
     Name: 'PlaceListRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/place-list-row.ui',
diff --git a/src/placeMarker.js b/src/placeMarker.js
index 3083b53..6bbca8d 100644
--- src/placeMarker.js
+++ src/placeMarker.js
@@ -24,7 +24,7 @@ const Lang = imports.lang;
 const MapMarker = imports.mapMarker;
 const PlaceBubble = imports.placeBubble;
 
-const PlaceMarker = new Lang.Class({
+var PlaceMarker = new Lang.Class({
     Name: 'PlaceMarker',
     Extends: MapMarker.MapMarker,
 
diff --git a/src/placePopover.js b/src/placePopover.js
index fb1acbd..0b98787 100644
--- src/placePopover.js
+++ src/placePopover.js
@@ -35,7 +35,7 @@ const Mode = {
     RESULT: 3 // We are displaying results
 };
 
-const PlacePopover = new Lang.Class({
+var PlacePopover = new Lang.Class({
     Name: 'PlacePopover',
     Extends: SearchPopover.SearchPopover,
     Signals : {
diff --git a/src/placeStore.js b/src/placeStore.js
index f32beb5..f768f08 100644
--- src/placeStore.js
+++ src/placeStore.js
@@ -34,7 +34,7 @@ const _ICON_SIZE = 20;
 const _ONE_DAY = 1000 * 60 * 60 * 24; // one day in ms
 const _STALE_THRESHOLD = 7; // mark the osm information as stale after a week
 
-const PlaceType = {
+var PlaceType = {
     ANY: -1,
     RECENT: 0,
     FAVORITE: 1,
@@ -42,7 +42,7 @@ const PlaceType = {
     RECENT_ROUTE: 3
 };
 
-const Columns = {
+var Columns = {
     PLACE_ICON: 0,
     PLACE: 1,
     NAME: 2,
@@ -50,7 +50,7 @@ const Columns = {
     ADDED: 4
 };
 
-const PlaceStore = new Lang.Class({
+var PlaceStore = new Lang.Class({
     Name: 'PlaceStore',
     Extends: Gtk.ListStore,
 
diff --git a/src/printLayout.js b/src/printLayout.js
index 4dc60d2..2a8fac5 100644
--- src/printLayout.js
+++ src/printLayout.js
@@ -74,7 +74,7 @@ function newFromRoute(route, pageWidth, pageHeight) {
     }
 }
 
-const PrintLayout = new Lang.Class({
+var PrintLayout = new Lang.Class({
     Name: 'PrintLayout',
     Extends: GObject.Object,
     Abstract: true,
diff --git a/src/printOperation.js b/src/printOperation.js
index 5d8e49a..004df0c 100644
--- src/printOperation.js
+++ src/printOperation.js
@@ -28,7 +28,7 @@ const Utils = imports.utils;
 
 const _MIN_TIME_TO_ABORT = 3000;
 
-const PrintOperation = new Lang.Class({
+var PrintOperation = new Lang.Class({
     Name: 'PrintOperation',
 
     _init: function(params) {
diff --git a/src/route.js b/src/route.js
index 2b4656d..2f16711 100644
--- src/route.js
+++ src/route.js
@@ -24,7 +24,7 @@ const Lang = imports.lang;
 
 const Utils = imports.utils;
 
-const TurnPointType = {
+var TurnPointType = {
     SHARP_LEFT:    0,
     LEFT:          1,
     SLIGHT_LEFT:   2,
@@ -41,7 +41,7 @@ const TurnPointType = {
     START:         10000
 };
 
-const Route = new Lang.Class({
+var Route = new Lang.Class({
     Name: 'Route',
 
     _init: function() {
@@ -77,7 +77,7 @@ const Route = new Lang.Class({
 });
 Utils.addSignalMethods(Route.prototype);
 
-const TurnPoint = new Lang.Class({
+var TurnPoint = new Lang.Class({
     Name: 'TurnPoint',
 
     _init: function({ coordinate, type, distance, instruction, turnAngle }) {
diff --git a/src/routeEntry.js b/src/routeEntry.js
index 7e9d7f0..01fe1d3 100644
--- src/routeEntry.js
+++ src/routeEntry.js
@@ -25,13 +25,13 @@ const Lang = imports.lang;
 const Application = imports.application;
 const PlaceEntry = imports.placeEntry;
 
-const Type = {
+var Type = {
     FROM: 0,
     TO: 1,
     VIA: 2
 };
 
-const RouteEntry = new Lang.Class({
+var RouteEntry = new Lang.Class({
     Name: 'RouteEntry',
     Extends: Gtk.Grid,
     Template: 'resource:///org/gnome/Maps/ui/route-entry.ui',
diff --git a/src/routeQuery.js b/src/routeQuery.js
index af2c2cf..68b40c0 100644
--- src/routeQuery.js
+++ src/routeQuery.js
@@ -27,7 +27,7 @@ const Application = imports.application;
 const PlaceStore = imports.placeStore;
 const TransitOptions = imports.transitOptions;
 
-const Transportation = {
+var Transportation = {
     CAR:        0,
     BIKE:       1,
     PEDESTRIAN: 2,
@@ -44,7 +44,7 @@ const Transportation = {
     }
 };
 
-const QueryPoint = new Lang.Class({
+var QueryPoint = new Lang.Class({
     Name: 'QueryPoint',
     Extends: GObject.Object,
     Properties: {
@@ -71,7 +71,7 @@ const QueryPoint = new Lang.Class({
     }
 });
 
-const RouteQuery = new Lang.Class({
+var RouteQuery = new Lang.Class({
     Name: 'RouteQuery',
     Extends: GObject.Object,
     Signals: {
diff --git a/src/routingDelegator.js b/src/routingDelegator.js
index 7029e46..b03417b 100644
--- src/routingDelegator.js
+++ src/routingDelegator.js
@@ -27,7 +27,7 @@
 
  const _FALLBACK_TRANSPORTATION = RouteQuery.Transportation.PEDESTRIAN;
 
- const RoutingDelegator = new Lang.Class({
+ var RoutingDelegator = new Lang.Class({
     Name: 'RoutingDelegator',
 
     _init: function(params) {
diff --git a/src/searchPopover.js b/src/searchPopover.js
index f0a72af..585801f 100644
--- src/searchPopover.js
+++ src/searchPopover.js
@@ -27,7 +27,7 @@ const Lang = imports.lang;
 
 /* Abstract search result popover that progagates keypress events from a
    focus-taking internal widget to the spawning search entry widget */
-const SearchPopover = new Lang.Class({
+var SearchPopover = new Lang.Class({
     Name: 'SearchPopover',
     Extends: Gtk.Popover,
     Abstract: true,
diff --git a/src/sendToDialog.js b/src/sendToDialog.js
index fd8585b..18c7cf5 100644
--- src/sendToDialog.js
+++ src/sendToDialog.js
@@ -30,14 +30,14 @@ const Utils = imports.utils;
 const _WEATHER_APPID = 'org.gnome.Weather.Application';
 const _CLOCKS_APPID = 'org.gnome.clocks';
 
-const Response = {
+var Response = {
     SUCCESS: 0,
     CANCEL: 1
 };
 
 const _NUM_VISIBLE = 6;
 
-const SendToDialog = new Lang.Class({
+var SendToDialog = new Lang.Class({
     Name: 'SendToDialog',
     Extends: Gtk.Dialog,
     Template: 'resource:///org/gnome/Maps/ui/send-to-dialog.ui',
diff --git a/src/serviceBackend.js b/src/serviceBackend.js
index 17f8faa..f87e122 100644
--- src/serviceBackend.js
+++ src/serviceBackend.js
@@ -23,7 +23,7 @@ const Lang = imports.lang;
 
 const Utils = imports.utils;
 
-const ServiceBackend = new Lang.Class({
+var ServiceBackend = new Lang.Class({
     Name: 'SocialServiceServiceBackend',
     Abstract: true,
 
diff --git a/src/settings.js b/src/settings.js
index 930e490..d3dbc78 100644
--- src/settings.js
+++ src/settings.js
@@ -24,7 +24,7 @@ const Gio = imports.gi.Gio;
 const Lang = imports.lang;
 const System = imports.system;
 
-const Settings = new Lang.Class({
+var Settings = new Lang.Class({
     Name: "Settings",
     Extends: Gio.Settings,
 
diff --git a/src/shapeLayer.js b/src/shapeLayer.js
index 0cd6477..9dd5107 100644
--- src/shapeLayer.js
+++ src/shapeLayer.js
@@ -22,7 +22,7 @@ const Gio = imports.gi.Gio;
 const GObject = imports.gi.GObject;
 const Lang = imports.lang;
 
-const SUPPORTED_TYPES = [];
+var SUPPORTED_TYPES = [];
 
 function newFromFile(file, mapView) {
     let contentType = Gio.content_type_guess(file.get_uri(), null)[0];
@@ -34,7 +34,7 @@ function newFromFile(file, mapView) {
     return null;
 }
 
-const ShapeLayer = new Lang.Class({
+var ShapeLayer = new Lang.Class({
     Name: 'ShapeLayer',
     Extends: GObject.Object,
     Abstract: true,
diff --git a/src/shortPrintLayout.js b/src/shortPrintLayout.js
index 61be99b..5ee77fb 100644
--- src/shortPrintLayout.js
+++ src/shortPrintLayout.js
@@ -28,7 +28,7 @@ const _Instruction = {
     SCALE_MARGIN: 0.01
 };
 
-const ShortPrintLayout = new Lang.Class({
+var ShortPrintLayout = new Lang.Class({
     Name: 'ShortPrintLayout',
     Extends: PrintLayout.PrintLayout,
 
diff --git a/src/sidebar.js b/src/sidebar.js
index 3fa18f0..d338422 100644
--- src/sidebar.js
+++ src/sidebar.js
@@ -40,7 +40,7 @@ const TransitMoreRow = imports.transitMoreRow;
 const TransitOptionsPanel = imports.transitOptionsPanel;
 const Utils = imports.utils;
 
-const Sidebar = new Lang.Class({
+var Sidebar = new Lang.Class({
     Name: 'Sidebar',
     Extends: Gtk.Revealer,
     Template: 'resource:///org/gnome/Maps/ui/sidebar.ui',
diff --git a/src/socialPlace.js b/src/socialPlace.js
index f58da4e..46f0ae0 100644
--- src/socialPlace.js
+++ src/socialPlace.js
@@ -24,7 +24,7 @@ const GObject = imports.gi.GObject;
 const Lang = imports.lang;
 const Location = imports.location;
 
-const SocialPlace = new Lang.Class({
+var SocialPlace = new Lang.Class({
     Name: 'SocialServiceSocialPlace',
     Extends: GObject.Object,
 
diff --git a/src/socialPlaceListBox.js b/src/socialPlaceListBox.js
index ba191c4..9bcfb0f 100644
--- src/socialPlaceListBox.js
+++ src/socialPlaceListBox.js
@@ -24,7 +24,7 @@ const Gtk = imports.gi.Gtk;
 const Lang = imports.lang;
 const Mainloop = imports.mainloop;
 
-const SocialPlaceRow = new Lang.Class({
+var SocialPlaceRow = new Lang.Class({
     Name: 'SocialPlaceRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/social-place-row.ui',
@@ -45,13 +45,13 @@ const SocialPlaceRow = new Lang.Class({
     }
 });
 
-const SocialPlaceMoreResultsRow = new Lang.Class({
+var SocialPlaceMoreResultsRow = new Lang.Class({
     Name: 'SocialPlaceMoreResultsRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/social-place-more-results-row.ui'
 });
 
-const SocialPlaceListBox = new Lang.Class({
+var SocialPlaceListBox = new Lang.Class({
     Name: 'SocialPlaceListBox',
     Extends: Gtk.ListBox,
     Signals: {
diff --git a/src/storedRoute.js b/src/storedRoute.js
index c44932d..0912635 100644
--- src/storedRoute.js
+++ src/storedRoute.js
@@ -28,7 +28,7 @@ const Place = imports.place;
 const Route = imports.route;
 const RouteQuery = imports.routeQuery;
 
-const StoredRoute = new Lang.Class({
+var StoredRoute = new Lang.Class({
     Name: 'StoredRoute',
     Extends: Place.Place,
 
diff --git a/src/transitArrivalMarker.js b/src/transitArrivalMarker.js
index b07efaf..ebd1ade 100644
--- src/transitArrivalMarker.js
+++ src/transitArrivalMarker.js
@@ -27,7 +27,7 @@ const Location = imports.location;
 const MapMarker = imports.mapMarker;
 const Place = imports.place;
 
-const TransitArrivalMarker = new Lang.Class({
+var TransitArrivalMarker = new Lang.Class({
     Name: 'TransitArrivalMarker',
     Extends: MapMarker.MapMarker,
 
diff --git a/src/transitArrivalRow.js b/src/transitArrivalRow.js
index e26cb04..e24e3b1 100644
--- src/transitArrivalRow.js
+++ src/transitArrivalRow.js
@@ -26,7 +26,7 @@ const _ = imports.gettext.gettext;
 const Gdk = imports.gi.Gdk;
 const Gtk = imports.gi.Gtk;
 
-const TransitArrivalRow = new Lang.Class({
+var TransitArrivalRow = new Lang.Class({
     Name: 'TransitArrivalRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/transit-arrival-row.ui',
diff --git a/src/transitBoardMarker.js b/src/transitBoardMarker.js
index 4ebcb59..bf8c632 100644
--- src/transitBoardMarker.js
+++ src/transitBoardMarker.js
@@ -40,7 +40,7 @@ const ACTOR_SIZE = 20;
  */
 const OUTLINE_LUMINANCE_THREASHHOLD = 0.9;
 
-const TransitBoardMarker = new Lang.Class({
+var TransitBoardMarker = new Lang.Class({
     Name: 'TransitBoardMarker',
     Extends: MapMarker.MapMarker,
 
diff --git a/src/transitItineraryRow.js b/src/transitItineraryRow.js
index 3b6bc99..b7aedaf 100644
--- src/transitItineraryRow.js
+++ src/transitItineraryRow.js
@@ -25,7 +25,7 @@ const Gtk = imports.gi.Gtk;
 
 const TransitRouteLabel = imports.transitRouteLabel;
 
-const TransitItineraryRow = new Lang.Class({
+var TransitItineraryRow = new Lang.Class({
     Name: 'TransitItineraryRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/transit-itinerary-row.ui',
diff --git a/src/transitLegRow.js b/src/transitLegRow.js
index a3cf8b5..e3b4ecf 100644
--- src/transitLegRow.js
+++ src/transitLegRow.js
@@ -33,7 +33,7 @@ const TransitRouteLabel = imports.transitRouteLabel;
 const TransitStopRow = imports.transitStopRow;
 const Utils = imports.utils;
 
-const TransitLegRow = new Lang.Class({
+var TransitLegRow = new Lang.Class({
     Name: 'TransitLegRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/transit-leg-row.ui',
diff --git a/src/transitMoreRow.js b/src/transitMoreRow.js
index f0deb52..25d75df 100644
--- src/transitMoreRow.js
+++ src/transitMoreRow.js
@@ -27,7 +27,7 @@ const Gtk = imports.gi.Gtk;
 
 const Application = imports.application;
 
-const TransitMoreRow = new Lang.Class({
+var TransitMoreRow = new Lang.Class({
     Name: 'TransitMoreRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/transit-more-row.ui',
diff --git a/src/transitOptions.js b/src/transitOptions.js
index 27bc09a..80c0bc4 100644
--- src/transitOptions.js
+++ src/transitOptions.js
@@ -21,7 +21,7 @@
 
 const Lang = imports.lang;
 
-const TransitOptions = new Lang.Class({
+var TransitOptions = new Lang.Class({
     Name: 'TransitOptions',
 
     _init: function() {
diff --git a/src/transitOptionsPanel.js b/src/transitOptionsPanel.js
index c7a6af9..bd71e4b 100644
--- src/transitOptionsPanel.js
+++ src/transitOptionsPanel.js
@@ -35,7 +35,7 @@ const CLOCK_FORMAT_KEY = 'clock-format';
 let _desktopSettings = new Gio.Settings({ schema_id: 'org.gnome.desktop.interface' });
 let clockFormat = _desktopSettings.get_string(CLOCK_FORMAT_KEY);
 
-const TransitOptionsPanel = new Lang.Class({
+var TransitOptionsPanel = new Lang.Class({
     Name: 'TransitOptionsPanel',
     Extends: Gtk.Grid,
     Template: 'resource:///org/gnome/Maps/ui/transit-options-panel.ui',
diff --git a/src/transitPlan.js b/src/transitPlan.js
index e08fa2d..5eb012c 100644
--- src/transitPlan.js
+++ src/transitPlan.js
@@ -41,7 +41,7 @@ let clockFormat = _desktopSettings.get_string(CLOCK_FORMAT_KEY);
  * These constants corresponds to the routeType attribute of transit legs
  * in original GTFS specification.
  */
-const RouteType = {
+var RouteType = {
     NON_TRANSIT: -1,
     TRAM:        0,
     SUBWAY:      1,
@@ -84,7 +84,7 @@ function _printTimeWithTZOffset(time, offset) {
 const DEFAULT_ROUTE_COLOR = '000000';
 const DEFAULT_ROUTE_TEXT_COLOR = 'ffffff';
 
-const Plan = new Lang.Class({
+var Plan = new Lang.Class({
     Name: 'Plan',
     Extends: GObject.Object,
     Signals: {
@@ -144,7 +144,7 @@ const Plan = new Lang.Class({
     }
 });
 
-const Itinerary = new Lang.Class({
+var Itinerary = new Lang.Class({
     Name: 'Itinerary',
     Extends: GObject.Object,
 
@@ -349,7 +349,7 @@ const Itinerary = new Lang.Class({
     }
 });
 
-const Leg = new Lang.Class({
+var Leg = new Lang.Class({
     Name: 'Leg',
 
     _init: function(params) {
@@ -666,7 +666,7 @@ const Leg = new Lang.Class({
     }
 });
 
-const Stop = new Lang.Class({
+var Stop = new Lang.Class({
     Name: 'Stop',
 
     _init: function(params) {
diff --git a/src/transitPrintLayout.js b/src/transitPrintLayout.js
index f6efd06..60338d8 100644
--- src/transitPrintLayout.js
+++ src/transitPrintLayout.js
@@ -60,7 +60,7 @@ const _Instruction = {
     SCALE_MARGIN: 0.01
 };
 
-const TransitPrintLayout = new Lang.Class({
+var TransitPrintLayout = new Lang.Class({
     Name: 'TransitPrintLayout',
     Extends: PrintLayout.PrintLayout,
 
diff --git a/src/transitRouteLabel.js b/src/transitRouteLabel.js
index 9d6377b..726520e 100644
--- src/transitRouteLabel.js
+++ src/transitRouteLabel.js
@@ -32,7 +32,7 @@ const Color = imports.color;
  */
 const OUTLINE_LUMINANCE_THREASHHOLD = 0.9;
 
-const TransitRouteLabel = new Lang.Class({
+var TransitRouteLabel = new Lang.Class({
     Name: 'TransitRouteLabel',
     Extends: Gtk.Label,
     Template: 'resource:///org/gnome/Maps/ui/transit-route-label.ui',
diff --git a/src/transitStopRow.js b/src/transitStopRow.js
index c9f6259..c8ebef6 100644
--- src/transitStopRow.js
+++ src/transitStopRow.js
@@ -25,7 +25,7 @@ const _ = imports.gettext.gettext;
 
 const Gtk = imports.gi.Gtk;
 
-const TransitStopRow = new Lang.Class({
+var TransitStopRow = new Lang.Class({
     Name: 'TransitStopRow',
     Extends: Gtk.ListBoxRow,
     Template: 'resource:///org/gnome/Maps/ui/transit-stop-row.ui',
diff --git a/src/transitWalkMarker.js b/src/transitWalkMarker.js
index 211e1c4..fb2b508 100644
--- src/transitWalkMarker.js
+++ src/transitWalkMarker.js
@@ -27,7 +27,7 @@ const Location = imports.location;
 const MapMarker = imports.mapMarker;
 const Place = imports.place;
 
-const TransitWalkMarker = new Lang.Class({
+var TransitWalkMarker = new Lang.Class({
     Name: 'TransitWalkMarker',
     Extends: MapMarker.MapMarker,
 
diff --git a/src/turnPointMarker.js b/src/turnPointMarker.js
index f903441..d6732b5 100644
--- src/turnPointMarker.js
+++ src/turnPointMarker.js
@@ -31,7 +31,7 @@ const MapMarker = imports.mapMarker;
 const Place = imports.place;
 const Utils = imports.utils;
 
-const TurnPointMarker = new Lang.Class({
+var TurnPointMarker = new Lang.Class({
     Name: 'TurnPointMarker',
     Extends: MapMarker.MapMarker,
 
diff --git a/src/userLocationBubble.js b/src/userLocationBubble.js
index b28c9f3..b2847c1 100644
--- src/userLocationBubble.js
+++ src/userLocationBubble.js
@@ -24,7 +24,7 @@ const Lang = imports.lang;
 const MapBubble = imports.mapBubble;
 const Utils = imports.utils;
 
-const UserLocationBubble = new Lang.Class({
+var UserLocationBubble = new Lang.Class({
     Name: "UserLocationBubble",
     Extends: MapBubble.MapBubble,
 
diff --git a/src/userLocationMarker.js b/src/userLocationMarker.js
index c891fa8..f4b7529 100644
--- src/userLocationMarker.js
+++ src/userLocationMarker.js
@@ -26,7 +26,7 @@ const Lang = imports.lang;
 const MapMarker = imports.mapMarker;
 const UserLocationBubble = imports.userLocationBubble;
 
-const AccuracyCircleMarker = new Lang.Class({
+var AccuracyCircleMarker = new Lang.Class({
     Name: 'AccuracyCircleMarker',
     Extends: Champlain.Point,
 
@@ -62,7 +62,7 @@ const AccuracyCircleMarker = new Lang.Class({
     }
 });
 
-const UserLocationMarker = new Lang.Class({
+var UserLocationMarker = new Lang.Class({
     Name: 'UserLocationMarker',
     Extends: MapMarker.MapMarker,
 
diff --git a/src/utils.js b/src/utils.js
index 496498f..c7fccc3 100644
--- src/utils.js
+++ src/utils.js
@@ -29,8 +29,8 @@ const Gtk = imports.gi.Gtk;
 const Signals = imports.signals;
 const Soup = imports.gi.Soup;
 
-const METRIC_SYSTEM = 1;
-const IMPERIAL_SYSTEM = 2;
+var METRIC_SYSTEM = 1;
+var IMPERIAL_SYSTEM = 2;
 
 //List of locales using imperial system according to glibc locale database
 const IMPERIAL_LOCALES = ['unm_US', 'es_US', 'es_PR', 'en_US', 'yi_US'];
diff --git a/src/zoomControl.js b/src/zoomControl.js
index a5bbda1..b210440 100644
--- src/zoomControl.js
+++ src/zoomControl.js
@@ -23,7 +23,7 @@ const Lang = imports.lang;
 
 const Utils = imports.utils;
 
-const ZoomControl = new Lang.Class({
+var ZoomControl = new Lang.Class({
     Name: 'ZoomControl',
     Extends: Gtk.Bin,
     Template: 'resource:///org/gnome/Maps/ui/zoom-control.ui',
diff --git a/src/zoomInNotification.js b/src/zoomInNotification.js
index 9b89291..382ecf3 100644
--- src/zoomInNotification.js
+++ src/zoomInNotification.js
@@ -26,7 +26,7 @@ const Notification = imports.notification;
 const OSMEdit = imports.osmEdit;
 const Utils = imports.utils;
 
-const ZoomInNotification = Lang.Class({
+var ZoomInNotification = Lang.Class({
     Name: 'ZoomInNotification',
     Extends: Notification.Notification,
 
-- 
cgit v0.12

