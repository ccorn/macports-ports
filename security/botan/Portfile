PortSystem          1.0
PortGroup           compilers 1.0
PortGroup           muniversal 1.0

name                botan
version             1.10.14
revision            0
categories          security devel
platforms           darwin
maintainers         nomaintainer
license             BSD
description         cryptographic algorithms and formats library in C++
long_description    Botan is a C++ library implementing a variety of \
                    cryptographic algorithms and formats. At this time, it is \
                    quite stable, and is suitable for use in a wide variety of \
                    programs.

homepage            https://botan.randombit.net/
master_sites        https://botan.randombit.net/releases/
distfiles           Botan-${version}.tgz
worksrcdir          Botan-${version}
checksums           sha256  10ed0b394db165733ac9557d8656356b7e9744d38c61c2b9c44cba6d84ff4c1c

depends_build       port:python27
depends_lib         path:lib/libssl.dylib:openssl port:zlib port:bzip2

worksrcdir          Botan-${version}

# From 1.11 on, Botan requires C++11
compilers.choose    cc cxx
compilers.setup     -gcc44 -gcc45 -gcc46 \
                    -clang33 -clang34 -clang35 \
                    -llvm -dragonegg33 -dragonegg34
# compiler.setup does not set configure.compiler, but we need it
# for proper archflags and to avoid weird fallbacks when blacklisting.
if {[info exists cdb([c_variant_name],compiler)]} {
    configure.compiler.add_deps no
    configure.compiler  $cdb([c_variant_name],compiler)
    compiler.blacklist  gcc-3.3 gcc-4.0 gcc-4.2 llvm-gcc-4.2 clang \
                        apple-gcc-4.0 apple-gcc-4.2 macports-llvm-gcc42
}
configure.cmd       ${prefix}/bin/python2.7 ./configure.py
configure.args      --docdir=share/doc --with-openssl --with-zlib --with-bzip2

if {[string match *clang* ${configure.compiler}]} {
  configure.args-append --cc=clang
} elseif {[string match *gcc* ${configure.compiler}]} {
  configure.args-append --cc=gcc
}

destroot.destdir    DESTDIR=${destroot}${prefix}

platform darwin { configure.args-append --os=darwin }

# botan way of setting cpu type in build phase
array set merger_configure_args {
    ppc     --cpu=ppc
    i386    --cpu=ia32
    ppc64   --cpu=ppc64
    x86_64  --cpu=amd64
}

if {![variant_isset universal]} {
    if {[info exists build_arch] && ${os.platform} eq "darwin"} {
        switch ${build_arch} {
            ppc -
            i386 {
                build.args CXX="${configure.cxx} -m32"
            }
            ppc64 -
            x86_64 {
                build.args CXX="${configure.cxx} -m64"
            }
        }
        if {[info exists merger_configure_args($build_arch)]} {
            configure.args-append $merger_configure_args(${build_arch})
        }
    } else {
        build.args CXX="${configure.cxx}"
    }
} else {
    # the arch flag is lost in the build phase, so put it back
    foreach arch ${configure.universal_archs} {
        lappend merger_build_args(${arch}) CXX='${configure.cxx} -arch ${arch}'
    }
}

# configure.py rejects this argument
configure.universal_args-delete --disable-dependency-tracking

livecheck.regex     "Botan-(1.10.\[0-9\]+).tgz"
livecheck.url       https://botan.randombit.net/
